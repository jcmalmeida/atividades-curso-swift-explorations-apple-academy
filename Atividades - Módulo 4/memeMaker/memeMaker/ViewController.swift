//
//  ViewController.swift
//  memeMaker
//
//  Created by JoÃ£o Carlos Martins de Almeida on 19/04/22.
//

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var topSegmentedControl: UISegmentedControl!
    @IBOutlet weak var bottomSegmentedControl: UISegmentedControl!
    
    @IBOutlet weak var topCaptionLabel: UILabel!
    @IBOutlet weak var bottomCaptionLabel: UILabel!
    
    let  ðŸ›’ = CaptionOption(emoji: "ðŸ›’", caption: "Hoje vou Ã s compras")
    let  ðŸŽ§ = CaptionOption(emoji: "ðŸŽ§", caption: "Coloca essa mÃºsica no volume mÃ¡ximo")
    let  ðŸ™ˆ = CaptionOption(emoji: "ðŸ™ˆ", caption: "NÃ£o quero ver isso")
    
    let  ðŸš‚ = CaptionOption(emoji: "ðŸš‚", caption: "Olha o trem fumaceando")
    let  ðŸ˜’ = CaptionOption(emoji: "ðŸ˜’", caption: "Sem paciÃªncia para bizarrices")
    let  ðŸ™€ = CaptionOption(emoji: "ðŸ™€", caption: "Mas gente, que isso?")
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        topSegmentedControl.removeAllSegments()
        bottomSegmentedControl.removeAllSegments()
        
        topSegmentedControl.selectedSegmentIndex = 0
        bottomSegmentedControl.selectedSegmentIndex = 0
        
        let topChoices = [ðŸ›’, ðŸŽ§, ðŸ™ˆ]
        let bottomChoices = [ðŸš‚, ðŸ˜’, ðŸ™€]
        
        // Do any additional setup after loading the view.
        insertSegments(choices: topChoices, control: topSegmentedControl)
        
        insertSegments(choices: bottomChoices, control: bottomSegmentedControl)
    }
    
    func insertSegments(choices: [CaptionOption], control: UISegmentedControl) {
        for choice in choices {
            control.insertSegment(withTitle: choice.emoji, at: choices.count, animated: false)
        }
    }

    @IBAction func actionSegmentedControl(_ sender: UISegmentedControl) {
        switch (sender.titleForSegment(at: sender.selectedSegmentIndex)) {
        case "ðŸ›’":
            topCaptionLabel.text = ðŸ›’.caption
        case "ðŸŽ§":
            topCaptionLabel.text = ðŸŽ§.caption
        case "ðŸ™ˆ":
            topCaptionLabel.text = ðŸ™ˆ.caption
        case "ðŸš‚":
            bottomCaptionLabel.text = ðŸš‚.caption
        case "ðŸ˜’":
            bottomCaptionLabel.text = ðŸ˜’.caption
        case "ðŸ™€":
            bottomCaptionLabel.text = ðŸ™€.caption
        default:
            fatalError()
        }
    }

    @IBAction func dragTopLabel(_ sender: UIPanGestureRecognizer) {
        
        if sender.state == .changed {
            topCaptionLabel.center = sender.location(in: view)
        }
    }
    
    @IBAction func dragBottomLabel(_ sender: UIPanGestureRecognizer) {
        
        if sender.state == .changed {
            bottomCaptionLabel.center = sender.location(in: view)
        }
    }
    
}

